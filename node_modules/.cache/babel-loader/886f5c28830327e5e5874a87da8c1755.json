{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\nimport { Button, DeleteButton } from \"./Buttons\";\nimport CardList from \"./CardList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck({\n  currentDeck,\n  loading,\n  setLoading\n}) {\n  _s();\n\n  const {\n    name,\n    description,\n    cards,\n    id\n  } = currentDeck;\n  const {\n    url\n  } = useRouteMatch();\n  const history = useHistory();\n  const abortController = new AbortController();\n\n  async function deleteHandler() {\n    if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n      try {\n        await deleteDeck(id, abortController.signal);\n        setLoading(true);\n        history.push(\"/\");\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"ViewDeck Delete Aborted\");\n        } else {\n          console.log(error);\n        }\n      }\n\n      return () => abortController.abort();\n    }\n  }\n\n  const renderPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", description, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/edit`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \" Edit Deck \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/study`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \" Study Deck \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `${url}/cards/new`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"Add Cards\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n      onClick: deleteHandler,\n      children: \" Delete Deck \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards,\n      loading: loading,\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" View Deck Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", renderPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(ViewDeck, \"KIHbC8c1m+bWZm7pGPcPAs6dIJk=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/ViewDeck.js"],"names":["React","Link","useHistory","useRouteMatch","deleteDeck","Button","DeleteButton","CardList","ViewDeck","currentDeck","loading","setLoading","name","description","cards","id","url","history","abortController","AbortController","deleteHandler","window","confirm","signal","push","error","console","log","abort","renderPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,WAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAlB,EAAwD;AAAA;;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAmCN,WAAzC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAUb,aAAa,EAA7B;AACA,QAAMc,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,iBAAeC,aAAf,GAA+B;AAC3B,QAAIC,MAAM,CAACC,OAAP,CAAe,0DAAf,CAAJ,EAAgF;AAC5E,UAAI;AACA,cAAMlB,UAAU,CAACW,EAAD,EAAKG,eAAe,CAACK,MAArB,CAAhB;AACAZ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,QAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACH,OAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACb,IAAN,KAAe,YAAnB,EAAiC;AAC7Bc,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,SAFD,MAEO;AACHD,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACD,aAAO,MAAMP,eAAe,CAACU,KAAhB,EAAb;AACH;AACJ;;AAED,QAAMC,UAAU,gBACZ;AAAA,4BACI;AAAA,sBAAOjB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAGG,GAAK,OAAnB;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAGA,GAAK,QAAnB;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eASI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAGA,GAAK,YAAnB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEI,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGN,KAAlB;AAA0B,MAAA,OAAO,EAAEJ,OAAnC;AAA4C,MAAA,UAAU,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAkBA,MAAID,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO;AAAA,sBAAQmB,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GA9CQrB,Q;UAEWL,a,EACAD,U;;;KAHXM,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\n\nimport { Button, DeleteButton } from \"./Buttons\";\nimport CardList from \"./CardList\";\n\nfunction ViewDeck({ currentDeck, loading, setLoading }) {\n    const { name, description, cards, id } = currentDeck;\n    const { url } = useRouteMatch();\n    const history = useHistory();\n    const abortController = new AbortController();\n\n    async function deleteHandler() {\n        if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n            try {\n                await deleteDeck(id, abortController.signal);\n                setLoading(true);\n                history.push(\"/\");\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"ViewDeck Delete Aborted\");\n                } else {\n                    console.log(error);\n                }\n            }\n            return () => abortController.abort();\n        }\n    }\n\n    const renderPage = (\n        <div>\n            <h2> { name } </h2>\n            <h4> { description } </h4>\n            <Link to={`${ url }/edit`}>\n                <Button> Edit Deck </Button>\n            </Link>\n            <Link to={`${ url }/study`}>\n                <Button> Study Deck </Button>\n            </Link>\n            <Link to={`${ url }/cards/new`}>\n                <Button> </Button>Add Cards\n            </Link>\n            <DeleteButton onClick={deleteHandler}> Delete Deck </DeleteButton>\n            <CardList cards={ cards } loading={loading} setLoading={setLoading} />\n        </div>\n    );\n\n    if (loading) {\n        return <p> View Deck Loading... </p>\n    } else {\n        return <div> { renderPage } </div>\n    }\n}\n\nexport default ViewDeck;"]},"metadata":{},"sourceType":"module"}