{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport CreateCard from \"./CreateCard\";\nimport EditDeck from \"./EditDeck\";\nimport Breadcrumb from \"./BreadCrumb\";\nimport EditCard from \"./EditCard\";\nimport ViewDeck from \"./ViewDeck\";\nimport StudyDeck from \"./StudyDeck\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck({\n  loading,\n  setLoading\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [currentDeck, setCurrentDeck] = useState(undefined);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadCurrentDeck() {\n      try {\n        const deckToSet = await readDeck(deckId, abortController.signal);\n        setCurrentDeck(deckToSet);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadCurrentDeck Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadCurrentDeck();\n    setLoading(false);\n    return () => abortController.abort();\n  }, [deckId, loading]); // todo: set route paths to use params variable ${deckId} so they are followed correctly to render the correct page\n  // current render shows not found when any button is clicked \n\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/decks/:deckId\",\n          children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              class: \"breadcrumb\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item active\",\n                \"aria-current\": \"page\",\n                children: \"Create Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ViewDeck, {\n            currentDeck: currentDeck,\n            loading: loading,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Edit Deck\"],\n            currentDeck: currentDeck,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditDeck, {\n            currentDeck: currentDeck,\n            loading: loading,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Create Card\"],\n            currentDeck: currentDeck,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CreateCard, {\n            currentDeck: currentDeck,\n            loading: loading,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Edit Card\"],\n            currentDeck: currentDeck,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditCard, {\n            currentDeck: currentDeck,\n            loading: loading,\n            setLoading: setLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            crumbs: [\"Home\", \"Deck\", \"Study\"],\n            currentDeck: currentDeck,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StudyDeck, {\n            currentDeck: currentDeck,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Deck, \"krt3TL1zPQyK/Kq6GjNL6XmJPNE=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":["React","useEffect","useState","Switch","Route","useParams","readDeck","CreateCard","EditDeck","Breadcrumb","EditCard","ViewDeck","StudyDeck","NotFound","Deck","loading","setLoading","deckId","currentDeck","setCurrentDeck","undefined","abortController","AbortController","loadCurrentDeck","deckToSet","signal","error","name","console","log","abort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useParams } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\n\nimport CreateCard from \"./CreateCard\";\nimport EditDeck from \"./EditDeck\";\nimport Breadcrumb from \"./BreadCrumb\";\nimport EditCard from \"./EditCard\";\nimport ViewDeck from \"./ViewDeck\";\nimport StudyDeck from \"./StudyDeck\";\nimport NotFound from \"./NotFound\";\n\nfunction Deck({ loading, setLoading }) {\n    const { deckId } = useParams();\n    const [ currentDeck, setCurrentDeck ] = useState(undefined);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        async function loadCurrentDeck() {\n            try {\n                const deckToSet = await readDeck(deckId, abortController.signal);\n                setCurrentDeck(deckToSet);\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"loadCurrentDeck Aborted\");\n                } else {\n                    throw error;\n                }\n            }\n        }\n        loadCurrentDeck();\n        setLoading(false);\n        return () => abortController.abort();\n    }, [ deckId, loading ]);\n\n\n// todo: set route paths to use params variable ${deckId} so they are followed correctly to render the correct page\n// current render shows not found when any button is clicked \n\n\n    if (currentDeck) {\n        return (\n            <div>\n                <Switch>\n                    <Route exact path=\"/decks/:deckId\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Create Deck</li>\n                </ol>\n            </nav>\n                        <ViewDeck currentDeck={currentDeck} loading={loading} setLoading={setLoading} />\n                    </Route>\n\n                    <Route path=\"/decks/:deckId/edit\">\n                        <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Edit Deck\"]} currentDeck={currentDeck} loading={loading} />\n                        <EditDeck currentDeck={currentDeck} loading={loading} setLoading={setLoading} />\n                    </Route>\n\n                    <Route path=\"/decks/:deckId/cards/new\">\n                        <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Create Card\"]} currentDeck={currentDeck} loading={loading} />\n                        <CreateCard currentDeck={currentDeck} loading={loading} setLoading={setLoading} />\n                    </Route>\n\n                    <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n                        <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Edit Card\"]} currentDeck={currentDeck} loading={loading} />\n                        <EditCard currentDeck={currentDeck} loading={loading} setLoading={setLoading} />\n                    </Route>\n\n                    <Route path=\"/decks/:deckId/study\">\n                        <Breadcrumb crumbs={[\"Home\", \"Deck\", \"Study\"]} currentDeck={currentDeck} loading={loading} />\n                        <StudyDeck currentDeck={currentDeck} loading={loading} />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <NotFound />\n            </div>\n        );\n    }\n}\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}