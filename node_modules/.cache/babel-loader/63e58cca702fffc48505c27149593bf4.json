{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard } from \"../utils/api/index\";\nimport CardForm from \"./CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  loading,\n  setLoading\n}) {\n  _s();\n\n  const {\n    cardId,\n    deckId\n  } = useParams();\n  const initialCardData = {};\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadCardData() {\n      try {\n        const currentCard = await readCard(cardId, abortController.signal);\n        initialCardData.id = currentCard.id;\n        initialCardData.front = currentCard.front;\n        initialCardData.back = currentCard.back;\n        initialCardData.deckId = currentCard.deckId;\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadCardData Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadCardData();\n    return () => abortController.abort();\n  }, [deckId, cardId]);\n\n  const renderPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Edit Card \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      initialCardData: initialCardData,\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Edit Card Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", renderPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(EditCard, \"efTQ8Mq+qzEtlhmIa4mmMT9y6pI=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard.js"],"names":["React","useEffect","useParams","readCard","CardForm","EditCard","loading","setLoading","cardId","deckId","initialCardData","abortController","AbortController","loadCardData","currentCard","signal","id","front","back","error","name","console","log","abort","renderPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,EAA2C;AAAA;;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAMQ,eAAe,GAAG,EAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,YAAf,GAA8B;AAC1B,UAAI;AACA,cAAMC,WAAW,GAAG,MAAMX,QAAQ,CAACK,MAAD,EAASG,eAAe,CAACI,MAAzB,CAAlC;AACAL,QAAAA,eAAe,CAACM,EAAhB,GAAqBF,WAAW,CAACE,EAAjC;AACAN,QAAAA,eAAe,CAACO,KAAhB,GAAwBH,WAAW,CAACG,KAApC;AACAP,QAAAA,eAAe,CAACQ,IAAhB,GAAuBJ,WAAW,CAACI,IAAnC;AACAR,QAAAA,eAAe,CAACD,MAAhB,GAAyBK,WAAW,CAACL,MAArC;AACH,OAND,CAME,OAAOU,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,SAFD,MAEO;AACH,gBAAMH,KAAN;AACH;AACJ;AACJ;;AACDN,IAAAA,YAAY;AACZ,WAAO,MAAMF,eAAe,CAACY,KAAhB,EAAb;AACH,GApBQ,EAoBN,CAAEd,MAAF,EAAUD,MAAV,CApBM,CAAT;;AAsBA,QAAMgB,UAAU,gBACZ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,eAAe,EAAEd,eAA3B;AAA4C,MAAA,UAAU,EAAEH;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,MAAID,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO;AAAA,sBAAOkB,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GAtCQnB,Q;UACsBH,S;;;KADtBG,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readCard } from \"../utils/api/index\";\n\nimport CardForm from \"./CardForm\";\n\nfunction EditCard({ loading, setLoading }) {\n    const { cardId, deckId } = useParams();\n    const initialCardData = {};\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        async function loadCardData() {\n            try {\n                const currentCard = await readCard(cardId, abortController.signal);\n                initialCardData.id = currentCard.id;\n                initialCardData.front = currentCard.front;\n                initialCardData.back = currentCard.back;\n                initialCardData.deckId = currentCard.deckId;\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"loadCardData Aborted\");\n                } else {\n                    throw error;\n                }\n            }\n        }\n        loadCardData();\n        return () => abortController.abort();\n    }, [ deckId, cardId ]);\n\n    const renderPage = (\n        <div>\n            <h2> Edit Card </h2>\n            <CardForm initialCardData={initialCardData} setLoading={setLoading} />\n        </div>\n    );\n\n    if (loading) {\n        return <p> Edit Card Loading... </p>\n    } else {\n        return <div> {renderPage} </div>\n    }\n}\n\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}