{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/BreadCrumb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BreadCrumb = ({\n  crumbs,\n  currentDeck,\n  loading\n}) => {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const routes = [{\n    path: \"/\",\n    name: \"Home\"\n  }, {\n    path: \"/decks/:deckId\",\n    name: \"Deck\"\n  }, {\n    path: \"/decks/new\",\n    name: \"Create Deck\"\n  }, {\n    path: \"/decks/:deckId/study\",\n    name: \"Study\"\n  }, {\n    path: \"/decks/:deckId/edit\",\n    name: \"Edit Deck\"\n  }, {\n    path: \"/decks/:deckId/cards/new\",\n    name: \"Create Card\"\n  }, {\n    path: \"/decks/:deckId/cards/:cardId/edit\",\n    name: \"Edit Card\"\n  }];\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadBreadcrumbs() {\n      try {\n        const crumbArray = crumbs.map((crumb, key) => {\n          const found = routes.find(route => {\n            return route.name === crumb;\n          });\n\n          if (found.path.includes(\":deckId\")) {\n            const substitute = found.path.replace(\":deckId\", deckId);\n            found.path = substitute;\n          }\n\n          if (found.path.includes(\":cardId\")) {\n            const substitute = found.path.replace(\":cardId\", cardId);\n            found.path = substitute;\n          }\n\n          if (found.name === \"Deck\") {\n            found.name = currentDeck.name;\n          }\n\n          if (found.name === \"Edit Card\") {\n            found.name = `Edit Card ${cardId}`;\n          }\n\n          if (crumbs.indexOf(crumb) === crumbs.length - 1) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: found.path,\n                children: [\" \", found.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this);\n          }\n        });\n        setBreadcrumbs(crumbArray);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadBreadcrumbs Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadBreadcrumbs();\n    return () => abortController.abort();\n  }, [deckId, cardId, crumbs]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading BreadCrumb... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [\" \", breadcrumbs, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(BreadCrumb, \"sb0kqTHgSLH/3TprFGfM2YBJCLM=\", false, function () {\n  return [useParams];\n});\n\n_c = BreadCrumb;\nexport default BreadCrumb;\n\nvar _c;\n\n$RefreshReg$(_c, \"BreadCrumb\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/BreadCrumb.js"],"names":["React","useEffect","useState","Link","useParams","BreadCrumb","crumbs","currentDeck","loading","deckId","cardId","breadcrumbs","setBreadcrumbs","routes","path","name","abortController","AbortController","loadBreadcrumbs","crumbArray","map","crumb","key","found","find","route","includes","substitute","replace","indexOf","length","error","console","log","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AAAA;;AACrD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBN,SAAS,EAApC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMW,MAAM,GAAG,CACX;AAACC,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADW,EAEX;AAACD,IAAAA,IAAI,EAAE,gBAAP;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAFW,EAGX;AAACD,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAHW,EAIX;AAACD,IAAAA,IAAI,EAAE,sBAAP;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GAJW,EAKX;AAACD,IAAAA,IAAI,EAAE,qBAAP;AAA8BC,IAAAA,IAAI,EAAE;AAApC,GALW,EAMX;AAACD,IAAAA,IAAI,EAAE,0BAAP;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GANW,EAOX;AAACD,IAAAA,IAAI,EAAE,mCAAP;AAA4CC,IAAAA,IAAI,EAAE;AAAlD,GAPW,CAAf;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,eAAf,GAAiC;AAC7B,UAAI;AACA,cAAMC,UAAU,GAAGb,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1C,gBAAMC,KAAK,GAAGV,MAAM,CAACW,IAAP,CAAaC,KAAD,IAAW;AACjC,mBAAOA,KAAK,CAACV,IAAN,KAAeM,KAAtB;AACH,WAFa,CAAd;;AAGA,cAAIE,KAAK,CAACT,IAAN,CAAWY,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAChC,kBAAMC,UAAU,GAAGJ,KAAK,CAACT,IAAN,CAAWc,OAAX,CAAmB,SAAnB,EAA8BnB,MAA9B,CAAnB;AACAc,YAAAA,KAAK,CAACT,IAAN,GAAaa,UAAb;AACH;;AACD,cAAIJ,KAAK,CAACT,IAAN,CAAWY,QAAX,CAAoB,SAApB,CAAJ,EAAoC;AAChC,kBAAMC,UAAU,GAAGJ,KAAK,CAACT,IAAN,CAAWc,OAAX,CAAmB,SAAnB,EAA8BlB,MAA9B,CAAnB;AACAa,YAAAA,KAAK,CAACT,IAAN,GAAaa,UAAb;AACH;;AACD,cAAIJ,KAAK,CAACR,IAAN,KAAe,MAAnB,EAA2B;AACvBQ,YAAAA,KAAK,CAACR,IAAN,GAAaR,WAAW,CAACQ,IAAzB;AACH;;AACD,cAAIQ,KAAK,CAACR,IAAN,KAAe,WAAnB,EAAgC;AAC5BQ,YAAAA,KAAK,CAACR,IAAN,GAAc,aAAYL,MAAO,EAAjC;AACH;;AACD,cAAIJ,MAAM,CAACuB,OAAP,CAAeR,KAAf,MAA0Bf,MAAM,CAACwB,MAAP,GAAgB,CAA9C,EAAiD;AAC7C,gCACI;AAAc,cAAA,SAAS,EAAC,iBAAxB;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAEP,KAAK,CAACT,IAAhB;AAAA,gCAAwBS,KAAK,CAACR,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,eAASO,GAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;AACJ,SAzBkB,CAAnB;AA0BAV,QAAAA,cAAc,CAACO,UAAD,CAAd;AACH,OA5BD,CA4BE,OAAOY,KAAP,EAAc;AACZ,YAAIA,KAAK,CAAChB,IAAN,KAAe,YAAnB,EAAiC;AAC7BiB,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,SAFD,MAEO;AACH,gBAAMF,KAAN;AACH;AACJ;AACJ;;AACDb,IAAAA,eAAe;AACf,WAAO,MAAMF,eAAe,CAACkB,KAAhB,EAAb;AACH,GA1CQ,EA0CN,CAACzB,MAAD,EAASC,MAAT,EAAiBJ,MAAjB,CA1CM,CAAT;;AA4CA,MAAIE,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,sBAA6BG,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CA9DD;;GAAMN,U;UACyBD,S;;;KADzBC,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst BreadCrumb = ({ crumbs, currentDeck, loading }) => {\n    const { deckId, cardId } = useParams();\n    const [breadcrumbs, setBreadcrumbs] = useState([]);\n    const routes = [\n        {path: \"/\", name: \"Home\"},\n        {path: \"/decks/:deckId\", name: \"Deck\"},\n        {path: \"/decks/new\", name: \"Create Deck\"},\n        {path: \"/decks/:deckId/study\", name: \"Study\"},\n        {path: \"/decks/:deckId/edit\", name: \"Edit Deck\"},\n        {path: \"/decks/:deckId/cards/new\", name: \"Create Card\"},\n        {path: \"/decks/:deckId/cards/:cardId/edit\", name: \"Edit Card\"},\n    ];\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        async function loadBreadcrumbs() {\n            try {\n                const crumbArray = crumbs.map((crumb, key) => {\n                    const found = routes.find((route) => {\n                        return route.name === crumb;\n                    });\n                    if (found.path.includes(\":deckId\")) {\n                        const substitute = found.path.replace(\":deckId\", deckId);\n                        found.path = substitute;\n                    }\n                    if (found.path.includes(\":cardId\")) {\n                        const substitute = found.path.replace(\":cardId\", cardId);\n                        found.path = substitute;\n                    }\n                    if (found.name === \"Deck\") {\n                        found.name = currentDeck.name;\n                    }\n                    if (found.name === \"Edit Card\") {\n                        found.name = `Edit Card ${cardId}`;\n                    }\n                    if (crumbs.indexOf(crumb) === crumbs.length - 1) {\n                        return (\n                            <li key={key} className=\"breadcrumb-item\">\n                                <Link to={found.path}> {found.name} </Link>\n                            </li>\n                        );\n                    }\n                });\n                setBreadcrumbs(crumbArray);\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"loadBreadcrumbs Aborted\");\n                } else {\n                    throw error;\n                }\n            }\n        }\n        loadBreadcrumbs();\n        return () => abortController.abort();\n    }, [deckId, cardId, crumbs]);\n\n    if (loading) {\n        return <p> Loading BreadCrumb... </p>\n    } else {\n        return <ol className=\"breadcrumb\"> {breadcrumbs} </ol>\n    }\n};\n\nexport default BreadCrumb;"]},"metadata":{},"sourceType":"module"}