{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  currentDeck,\n  loading\n}) {\n  _s();\n\n  const {\n    cards\n  } = currentDeck;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [front, setFront] = useState(true);\n  const history = useHistory();\n\n  const nextCardHandler = () => {\n    if (currentIndex < cards.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      setFront(true);\n    } else {\n      if (window.confirm(\"Restart cards?\\n\\nClick 'Cancel' to return to the home page\")) {\n        setCurrentIndex(0);\n        setFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const turnCardHandler = () => {\n    setFront(!front);\n  };\n\n  const renderPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border-primary mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\" Card \", currentIndex + 1, \" of \", cards.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: front ? cards[currentIndex].front : cards[currentIndex].back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: turnCardHandler,\n        children: \" Turn Card \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), !front ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: nextCardHandler,\n        children: \" Next Card \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading Card... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", renderPage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(Card, \"1ifNGhVyY5F5OniTLCWJvf+bUS0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Card.js"],"names":["React","useState","useHistory","Button","Card","currentDeck","loading","cards","currentIndex","setCurrentIndex","front","setFront","history","nextCardHandler","length","window","confirm","push","turnCardHandler","renderPage","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAd,EAAwC;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,WAAlB;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC1B,QAAIL,YAAY,GAAGD,KAAK,CAACO,MAAN,GAAe,CAAlC,EAAqC;AACjCL,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACAG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAHD,MAGO;AACH,UAAII,MAAM,CAACC,OAAP,CAAe,6DAAf,CAAJ,EAAmF;AAC/EP,QAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAHD,MAGO;AACHC,QAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACH;AACJ;AACJ,GAZD;;AAcA,QAAMC,eAAe,GAAG,MAAM;AAC1BP,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAFD;;AAIA,QAAMS,UAAU,gBACZ;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,6BAAkCX,YAAY,GAAG,CAAjD,UAAwDD,KAAK,CAACO,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBACKJ,KAAK,GAAGH,KAAK,CAACC,YAAD,CAAL,CAAoBE,KAAvB,GAA+BH,KAAK,CAACC,YAAD,CAAL,CAAoBY;AAD7D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAMK,CAACR,KAAD,gBAAS,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT,GAAiE,IANtE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAaA,MAAIP,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBAAO;AAAA,sBAAOa,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;GA1CQf,I;UAIWF,U;;;KAJXE,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"./Buttons\";\n\nfunction Card({ currentDeck, loading }) {\n    const { cards } = currentDeck;\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [front, setFront] = useState(true);\n    const history = useHistory();\n\n    const nextCardHandler = () => {\n        if (currentIndex < cards.length - 1) {\n            setCurrentIndex(currentIndex + 1);\n            setFront(true);\n        } else {\n            if (window.confirm(\"Restart cards?\\n\\nClick 'Cancel' to return to the home page\")) {\n                setCurrentIndex(0);\n                setFront(true);\n            } else {\n                history.push(\"/\");\n            }\n        }\n    };\n\n    const turnCardHandler = () => {\n        setFront(!front);\n    };\n\n    const renderPage = (\n        <div className=\"card border-primary mb-3\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\"> Card {currentIndex + 1} of {cards.length} </h4>\n                <p className=\"card-text\">\n                    {front ? cards[currentIndex].front : cards[currentIndex].back}\n                </p>\n                <Button onClick={turnCardHandler}> Turn Card </Button>\n                {!front ? <Button onClick={nextCardHandler}> Next Card </Button>: null}\n            </div>\n        </div>\n    );\n\n    if (loading) {\n        return <p> Loading Card... </p>\n    } else {\n        return <div> {renderPage} </div>\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}