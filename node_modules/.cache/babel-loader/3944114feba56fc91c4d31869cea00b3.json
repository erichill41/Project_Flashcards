{"ast":null,"code":"var _jsxFileName = \"/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { createCard, updateCard } from \"../utils/api\";\nimport { Button } from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardForm({\n  initialCardData,\n  setLoading\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  const [cardData, setCardData] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadCardData() {\n      try {\n        setCardData(initialCardData);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadCardData Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadCardData();\n    return () => abortController.abort();\n  }, [url]);\n\n  const handleChange = ({\n    target\n  }) => {\n    setCardData({ ...cardData,\n      [target.name]: target.value\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n\n    try {\n      if (cardData.id) {\n        await updateCard(cardData, abortController.signal);\n        history.push(`/decks/${deckId}`);\n      } else {\n        await createCard(deckId, cardData, abortController.signal);\n        setCardData(initialCardData);\n      }\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"CardForm Aborted\");\n      } else {\n        throw error;\n      }\n    }\n\n    setLoading(true);\n    return () => abortController.abort();\n  }\n\n  const renderPage = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        children: \" Front \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: cardData.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        children: \" Back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        rows: \"3\",\n        onChange: handleChange,\n        value: cardData.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setLoading(true);\n          history.push(`/decks/${deckId}`);\n        },\n        children: \"Finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \" Save Card \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n\n  return renderPage;\n}\n\n_s(CardForm, \"FGHgKJF6OaZW7qGtbqRgzvBLQY4=\", false, function () {\n  return [useParams, useRouteMatch, useHistory];\n});\n\n_c = CardForm;\nexport default CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"sources":["/Users/erichill/Documents/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardForm.js"],"names":["React","useEffect","useState","useParams","useHistory","useRouteMatch","createCard","updateCard","Button","CardForm","initialCardData","setLoading","deckId","url","cardData","setCardData","history","abortController","AbortController","loadCardData","error","name","console","log","abort","handleChange","target","value","handleSubmit","event","preventDefault","id","signal","push","renderPage","front","back"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { createCard, updateCard } from \"../utils/api\";\n\nimport { Button } from \"./Buttons\";\n\nfunction CardForm({ initialCardData, setLoading }) {\n    const { deckId } = useParams();\n    const { url } = useRouteMatch();\n    const [cardData, setCardData] = useState({});\n    const history = useHistory();\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        async function loadCardData() {\n            try {\n                setCardData(initialCardData);\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    console.log(\"loadCardData Aborted\");\n                } else {\n                    throw error;\n                }\n            }\n        }\n        loadCardData();\n        return () => abortController.abort();\n    }, [url]);\n\n    const handleChange = ({ target }) => {\n        setCardData({\n            ...cardData,\n            [target.name]: target.value,\n        });\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        const abortController = new AbortController();\n\n        try {\n            if (cardData.id) {\n                await updateCard(cardData, abortController.signal);\n                history.push(`/decks/${deckId}`);\n            } else {\n                await createCard(deckId, cardData, abortController.signal);\n                setCardData(initialCardData);\n            }\n        } catch (error) {\n            if (error.name === \"AbortError\") {\n                console.log(\"CardForm Aborted\");\n            } else {\n                throw error;\n            }\n        }\n        setLoading(true);\n        return () => abortController.abort();\n    }\n\n    const renderPage = (\n        <div>\n            <form onSubmit={handleSubmit} className=\"form-group\">\n                <label htmlFor=\"front\"> Front </label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"front\"\n                    name=\"front\"\n                    rows=\"3\"\n                    onChange={handleChange}\n                    value={cardData.front}\n                />\n\n                <label htmlFor=\"back\"> Back </label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"back\"\n                    name=\"back\"\n                    rows=\"3\"\n                    onChange={handleChange}\n                    value={cardData.back}\n                />\n\n                <Button onClick={() => {\n                    setLoading(true);\n                    history.push(`/decks/${deckId}`)\n                }}\n                >\n                    Finished\n                </Button>\n\n                <Button type=\"submit\"> Save Card </Button>\n            </form>\n        </div>\n    );\n\n    return renderPage;\n}\n\nexport default CardForm;"]},"metadata":{},"sourceType":"module"}